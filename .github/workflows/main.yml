# This is a basic workflow to help you get started with Actions

name: Build and push to DockerHub registry

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install client dependencies
        working-directory: ./client
        run: npm install
      - name: Configure environment variables
        run: echo "CI=false" >> $GITHUB_ENV
      - name: Build client
        working-directory: ./client
        run: npm run build
      - name: Copy client build to server
        run: cp -r client/build server/bin/client_dist
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@v1
      - name: Add SHORT_SHA env referencing commit
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - 
        name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          file: ./server/Dockerfile
          context: ./server
          push: true
          tags: mihaid90/node-shop:${{env.SHORT_SHA}}
      - name: Install ts-node globally
        working-directory: ./server
        run: npm i ts-node -g ; npm i ts-node --save-dev
      - name: Test
        working-directory: ./server
        run: npm test
      - name: Cover
        working-directory: ./server
        run: npm run cover
      - name: Coverage upload to Codecov
        working-directory: ./server
        run: npx codecov
